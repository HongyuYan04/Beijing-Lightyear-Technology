{"remainingRequest":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\src\\views\\home\\index.vue?vue&type=style&index=0&id=15560c56&prod&lang=css","dependencies":[{"path":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\src\\views\\home\\index.vue","mtime":1697551062000},{"path":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\下载\\人力资源管理系统-16(1)\\人力资源管理系统\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbC1jYWxlbmRhci10YWJsZSAuZWwtY2FsZW5kYXItZGF5IHsKICBoZWlnaHQ6IDU0cHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAkXA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/home","sourcesContent":["<template>\n  <div>\n    <el-row class=\"home\" :gutter=\"20\">\n      <el-col :span=\"8\" style=\"margin-top: 20px\">\n        <el-card shadow=\"hover\">\n          <div class=\"user\">\n\n            <el-upload style=\"margin-bottom: -120px;margin-right: -10px\"\n                       :action=\"uploadApi\" :headers=\"headers\" :show-file-list=\"false\" :multiple=\"false\"\n                       :on-success=\"handleUploadSuccess\"\n                       :limit=\"1\">\n              <i class=\"el-icon-edit\">修改头像</i>\n            </el-upload>\n            <img :src=\"avatar\"/>\n            <div class=\"userinfo\">\n              <p style=\"margin-bottom: 15px;font-weight: bold;\">{{ currentDateInfo }}</p>\n              <p class=\"name\">{{ staff.name }}</p>\n            </div>\n          </div>\n          <div class=\"login-info\">\n            <p>生日：<span>{{ staff.birthday }}</span></p>\n            <p>地址：<span>{{ staff.address }}</span></p>\n            <p>部门：<span>{{ staff.deptName }}</span></p>\n          </div>\n        </el-card>\n        <el-card style=\"margin-top: 20px;height:487px\">\n          <el-calendar v-model=\"attendanceData.date\">\n            <template\n              slot=\"dateCell\"\n              slot-scope=\"{date, data}\">\n              <span>{{ date.getDate() }}</span>\n              <!-- 使用v-if避免在没有数据的时候显示解析-->\n              <el-tag v-show=\"data.type==='current-month'\" v-if=\"attendanceData.list[date.getDate() - 1]\"\n                      :type=\"attendanceData.list[date.getDate() - 1].tagType\">\n                {{ attendanceData.list[date.getDate() - 1].message }}\n              </el-tag>\n            </template>\n          </el-calendar>\n        </el-card>\n      </el-col>\n      <el-col :span=\"16\" style=\"margin-top: 20px\">\n        <div class=\"num\">\n          <el-card v-for=\"(item,index) in countData\" :key=\"index\" :body-style=\"{ display: 'flex', padding: 0 }\">\n            <i class=\"icon\" :class=\"'el-icon-' +item.icon\" :style=\"{ background: item.color }\"/>\n            <div class=\"detail\">\n              <p class=\"txt\" style=\" margin-bottom: 5px\">{{ item.name }}</p>\n              <p class=\"num\">{{ item.value }}</p>\n            </div>\n          </el-card>\n        </div>\n        <el-card style=\"height: 300px\">\n          <div style=\"height: 300px\" ref=\"city\"></div>\n        </el-card>\n        <div class=\"graph\">\n          <el-card style=\"height: 300px\">\n            <div style=\"height: 300px\" ref=\"staff\"></div>\n          </el-card>\n          <el-card style=\"height: 300px\">\n            <div style=\"height: 300px\" ref=\"department\"></div>\n          </el-card>\n        </div>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<script>\nimport * as echarts from 'echarts'\nimport { getAttendanceData, getCityData, getCountData, getDepartmentData, getStaffData } from '../../api/home'\nimport { getDownloadApi, getUploadApi } from '../../api/docs'\nimport { edit, getInfo } from '../../api/staff'\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'Home',\n  data () {\n    return {\n      dayOfWeek: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n      attendanceData: {\n        date: '',\n        list: []\n      },\n      countData: [\n        {\n          name: '员工总数',\n          value: 0,\n          icon: 'user',\n          color: '#409EFF'\n        },\n        {\n          name: '状态正常',\n          value: 0,\n          icon: 'star-on',\n          color: '#67C23A'\n        },\n        {\n          name: '状态异常',\n          value: 0,\n          icon: 's-goods',\n          color: '#F56C6C'\n        },\n        {\n          name: '今日迟到',\n          value: 0,\n          icon: 'timer',\n          color: '#409EFF'\n        },\n        {\n          name: '今日早退',\n          value: 0,\n          icon: 'watch',\n          color: '#67C23A'\n        },\n        {\n          name: '今日旷工',\n          value: 0,\n          icon: 'lock',\n          color: '#F56C6C'\n        }\n      ],\n      staffOption: {\n        title: {\n          text: new Date().getFullYear() + '年员工入职情况',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c}人',\n          textStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: []\n        },\n        yAxis: {\n          type: 'value',\n          name: '人数'\n        },\n        series: [\n          {\n            data: [],\n            type: 'line'\n          },\n          {\n            data: [],\n            type: 'bar'\n          }\n        ]\n      },\n      cityOption: {\n        title: {\n          text: '部分城市社保缴费比例'\n        },\n        legend: {},\n        tooltip: {\n          trigger: 'item',\n          formatter: function (params) {\n            return '<a>' + params.name + '</a></a>' + '<br /><a>' + params.seriesName + ': ' + params.data[params.seriesIndex + 1] * 100 + '%</a>'\n          },\n          textStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        dataset: {\n          source: []\n        },\n        xAxis: { type: 'category' },\n        yAxis: {\n          type: 'value',\n          name: '百分比',\n          axisLabel: {\n            formatter: function (val) {\n              return val * 100 + '%'\n            }\n          }\n        },\n        series: [{ type: 'line' }, { type: 'line' }, { type: 'line' }, { type: 'line' }]\n      },\n      departmentOption: {\n        title: {\n          text: '员工分布情况',\n          left: 'center'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c}人',\n          textStyle: {\n            fontWeight: 'bold'\n          }\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: { show: true },\n            dataView: { show: true, readOnly: false },\n            restore: { show: true },\n            saveAsImage: { show: true }\n          }\n        },\n        series: [\n          {\n            name: 'Nightingale Chart',\n            type: 'pie',\n            radius: ['10%', '60%'],\n            center: ['50%', '55%'],\n            roseType: 'area',\n            label: { // 饼图图形上的文本标签\n              normal: {\n                show: true,\n                position: 'inner', // 标签的位置\n                textStyle: {\n                  fontWeight: 'bold'\n                },\n                formatter: '{d}%'\n              }\n            },\n            itemStyle: {\n              borderRadius: 3\n            },\n            data: []\n          }\n        ]\n      }\n    }\n  },\n  computed: {\n    ...mapState('staff', ['staff']),\n    ...mapState('token', ['token']),\n    headers () {\n      return { token: this.token }\n    },\n    uploadApi () {\n      return getUploadApi()\n    },\n    downloadApi () {\n      return getDownloadApi()\n    },\n    currentDateInfo () {\n      const date = new Date()\n      const year = date.getFullYear()\n      const month = date.getMonth() + 1\n      const currentDate = date.getDate()\n      const day = date.getDay()\n      return year + '年' + month + '月' + currentDate + '日' + ' ' + this.dayOfWeek[day]\n    },\n    avatar () {\n      return this.staff.avatar ? this.downloadApi + this.staff.avatar : require('../../assets/images/avatar.png')\n    }\n  },\n  watch: {\n    'attendanceData.date':\n      function () {\n        this.getStaffAttendance()\n      }\n  },\n  methods: {\n    loading () {\n      getInfo(this.staff.id).then(response => {\n        if (response.code === 200) {\n          this.$store.commit('staff/SET_STAFF', response.data)\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n\n      getStaffData().then(response => {\n        if (response.code === 200) {\n          const quarters = ['一季度', '二季度', '三季度', '四季度']\n          this.staffOption.xAxis.data = quarters\n          this.staffOption.series.forEach(item => {\n            item.data = response.data\n          })\n          const staffChart = echarts.init(this.$refs.staff)\n          staffChart.setOption(this.staffOption)\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n\n      // 获取统计数据\n      getCountData().then(response => {\n        if (response.code === 200) {\n          this.countData[0].value = response.data.totalNum\n          this.countData[1].value = response.data.normalNum\n          this.countData[2].value = response.data.totalNum - response.data.normalNum\n          this.countData[3].value = response.data.lateNum\n          this.countData[4].value = response.data.leaveEarlyNum\n          this.countData[5].value = response.data.absenteeismNum\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n\n      // 获取城市设社保数据\n      getCityData().then(response => {\n        if (response.code === 200) {\n          const cityData = response.data.map(item => [item.name, item.comPensionRate, item.comMedicalRate, item.comUnemploymentRate, item.comMaternityRate])\n          cityData.unshift(['product', '养老保险', '医疗保险', '失业保险', '生育保险'])\n          this.cityOption.dataset.source = cityData\n          const cityChart = echarts.init(this.$refs.city)\n          cityChart.setOption(this.cityOption)\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n\n      // 获取当前月员工的考勤数据\n      getAttendanceData({ id: this.staff.id }).then(response => {\n        if (response.code === 200) {\n          this.attendanceData.list = response.data\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n\n      getDepartmentData().then(response => {\n        if (response.code === 200) {\n          this.departmentOption.series[0].data = response.data\n          const departmentChart = echarts.init(this.$refs.department)\n          departmentChart.setOption(this.departmentOption)\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n    },\n    // 获取指定月份员工的考勤数据\n    getStaffAttendance () {\n      const d = this.attendanceData.date\n      let month = ''\n      if (d.getMonth() < 9) {\n        month = d.getFullYear() + '0' + (d.getMonth() + 1)\n      } else {\n        month = d.getFullYear() + '' + (d.getMonth() + 1)\n      }\n      getAttendanceData({ id: this.staff.id, month: month }).then(response => {\n        if (response.code === 200) {\n          this.attendanceData.list = response.data\n        } else {\n          this.$message.error('获取数据失败！')\n        }\n      })\n    },\n    handleUploadSuccess (res) {\n      if (res.code === 200) {\n        // 修改头像\n        edit({ id: this.staff.id, avatar: res.data.name }).then(response => {\n          if (response.code === 200) {\n            this.$message.success('修改头像成功！')\n            this.$store.commit('staff/SET_AVATAR', res.data.name)\n          } else {\n            this.$message.error('修改头像失败！')\n          }\n        })\n      } else {\n        this.$message.error('文件上传失败！')\n      }\n    }\n  },\n  created () {\n    this.loading()\n  }\n}\n</script>\n\n<style>\n.el-calendar-table .el-calendar-day {\n  height: 54px;\n}\n</style>\n"]}]}